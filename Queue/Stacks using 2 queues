/***********************/
Implement a Stack using two queues q1 and q2.
Example 1:
Input:
push(2)
push(3)
pop()
push(4)
pop()
Output: 3 4
*/
/*************************CODE********usuing 1 queue*********/
void QueueStack :: push(int x)
{
        // Your Code
        q1.push(x);
}

//Function to pop an element from stack using two queues. 
int QueueStack :: pop()
{
        // Your Code
        if(q1.empty())
            return -1;
        int size=q1.size()-1;
        while(size--)
        {
            q1.push(q1.front());
            q1.pop();
        }
        int k=q1.front();
        q1.pop();
            return k;
}

/************************CODE*********using 2 quesues********
void QueueStack :: push(int x)
{
        // Your Code
        q1.push(x);
}
int QueueStack :: pop()
{
        // Your Code
        if(q1.empty())
            return -1;
        int size=q1.size()-1;
        while(size--)
        {
            q2.push(q1.front());
            q1.pop();
        }
        int k=q1.front();
        q1.pop();
        size=q2.size();
         while(size--)
        {
            q1.push(q2.front());
            q2.pop();
        }
            return k;
}
*/
