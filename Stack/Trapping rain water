/*********
Given an array arr[] of N non-negative integers representing the height of blocks. If width of each block is 1, compute how much water can be trapped between the blocks
during the rainy season. 
Example 1:
Input:
N = 6
arr[] = {3,0,0,2,0,4}
Output:
10
*********/

int trappingWater(int arr[], int n){
        // Code here
        int left[n]={},right[n]={},ans[n],sum=0;
        int k=0;
        for(int i=0;i<n;i++)
        {
            k=max(arr[i],k);
            left[i]=k;    
        }
        
        int l=INT_MIN;
        for(int i=n-1;i>=0;i--)
        {
            l=max(arr[i],l);
            right[i]=l;    
        }
        
        for(int i=0;i<n;i++)
        {
            left[i]=min(left[i],right[i]);    
        }
        for(int i=0;i<n;i++)
        {
            ans[i]=abs(left[i]-arr[i]);    
        }
         for(int i=0;i<n;i++)
        {
            sum+=ans[i];  
        }
        
        return sum;
    }
