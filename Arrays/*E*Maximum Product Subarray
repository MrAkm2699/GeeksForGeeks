/***************
Given an array Arr that contains N integers (may be positive, negative or zero). Find the product of the maximum product subarray.

Example 1:
Input:
N = 5
Arr[] = {6, -3, -10, 0, 2}
Output: 180
Explanation: Subarray with maximum product
is 6, -3, -10 which gives product as 180.
****************/

/*************CODE-1***********/
	long long maxProduct(int *arr, int n) {
	    // code here
	    long long ans=1;
	    long long res1=1;
	    long long res2=1;
	    if(n==1)
	    return arr[0];
	    for(int i=0;i<n;i++)
	    {
	       if(arr[i]!=0)
	       {
	           ans*=arr[i];
	       }
	       else
	        ans=1;
	       
	       res1=max(res1,ans);
	    }
	    ans=1;
	     for(int i=n-1;i>=0;i--)
	    {
	       if(arr[i]!=0)
	       {
	           ans*=arr[i];
	       }
	       else
	        ans=1;
	       
	       res2=max(res2,ans);
	    }
	    return max(res1,res2);
	}
  
  /********************CODE-2************
  long long maxProduct(int *A, int N ) {

ll maxP , minP , res ;

maxP = minP = res = 1 ;

for( int i = 0 ; i < N ; i++ )
{
ll x = A[i];

if( x < 0 ) swap( maxP , minP );

maxP = max( x , x*maxP );
minP = min( x , x*minP );

res = max( res , maxP );
}


return res ;

}
  **********/
