/**************************

The cost of stock on each day is given in an array A[] of size N. Find all the days on which you buy and sell the stock so that in between those days 
your profit is maximum.

Example 1:
Input:
N = 7
A[] = { 100, 180, 260, 310, 40, 535, 695 }
Output:
(0 3) (4 6)
Explanation 1:
We can buy stock on day 0, 
and sell it on 3rd day, 
which will give us maximum profit.

Example 2:
Input:
N = 10
A[] = {23, 13, 25, 29, 33, 19, 34, 45, 65, 67}
Output:
(1 4) (5 9)

*****************************/


/*****************CODE***************/
void stockBuySell(int price[], int n) {
    // code here
    int temp=-1;
    // int ans[n]={};
    for(int i=1;i<n;i++)
    {
        if(price[i]>=price[i-1])
        {
            if(temp== -1 or temp==-2)
            {
                cout<<"("<<i-1<<" ";
                temp=0;
            }
        }
        else {
            if(temp==0)
            {
                cout<<i-1<<") ";
                temp=-2;
            }
        }
    }
    if(temp==0)
    {
        cout<<n-1<<") ";
    }else
    if(price[n-1]<=price[n-2] and temp==-1){
        cout<<"No Profit";
    }
    cout<<endl;    
}
