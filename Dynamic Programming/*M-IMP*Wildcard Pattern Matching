/**********************
Given two strings 'str' and a wildcard pattern 'pattern' of length N and M respectively,  You have to print '1' if the wildcard pattern is matched with str else print '0' .
The wildcard pattern can include the characters ‘?’ and ‘*’
‘?’ – matches any single character
‘*’ – Matches any sequence of characters (including the empty sequence)

Note: The matching should cover the entire str (not partial str).
Example 1:
Input:
pattern = "ba*a?"
str = "baaabab"
Output: 1
Explanation: replace '*' with "aab" and '?' with 'b'. 

Example 2:
Input:
pattern = "a*ab"
str = "baaabab"
Output: 0
Explanation: Because of'a' at first position, pattern and str can't be matched.

**********************/

/******************CODE*************/
int wildCard(string pattern,string str)
    {
        int m=pattern.length();
        int n=str.length();
        bool dp[n+1][m+1];
        memset(dp,false,sizeof(dp));
        
        // if(pattern[0]=='*')
        //     dp[0][1]=true;
         dp[0][0]=true;
        for(int i=1;i<=m;i++)
        {
            if(pattern[i-1]=='*')  //if pattern starts with '*' 
            dp[0][i]=dp[0][i-1];
        }
        
       
        
        for(int i=1; i<=n; i++)
        {
            for(int j=1; j<=m; j++)
            {
                if(pattern[j-1]=='?' || pattern[j-1]==str[i-1])
                    dp[i][j]=dp[i-1][j-1];
                else if(pattern[j-1]=='*')
                    dp[i][j]= dp[i-1][j] || dp[i][j-1];
            }
        }
        return dp[n][m];
    }
