/*******************
Given an integer N denoting the Length of a line segment. You need to cut the line segment in such a way that the cut length of a line segment each time is either x , y or z. 
Here x, y, and z are integers.After performing all the cut operations, your total number of cut segments must be maximum.

Example 1:
Input:
N = 4
x = 2, y = 1, z = 1
Output: 4
Explanation:Total length is 4, and the cut
lengths are 2, 1 and 1.  We can make
maximum 4 segments each of length 1.

Example 2:
Input:
N = 5
x = 5, y = 3, z = 2
Output: 2
Explanation: Here total length is 5, and
the cut lengths are 5, 3 and 2. We can
make two segments of lengths 3 and 2.

********************/

/****************CODE-1**************/

int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        int dp[n+1]={};
        
        for(int i=1;i<=n;i++)
        {
            dp[i]=-1;
            if(i-x>=0)
                dp[i]=max(dp[i],dp[i-x]);
            if(i-y>=0)
                dp[i]=max(dp[i],dp[i-y]);
            if(i-z>=0)
                dp[i]=max(dp[i],dp[i-z]);
            if(dp[i]!=-1)
                dp[i]++;
        }
        if(dp[n]==-1)
        return 0;
            return dp[n];
    }
    
    
/***************CODE-2***********

int ans(int n, int x, int y, int z, int dp[]){
  if(n==0)
  return 0;
  if(n<0)
  return INT_MIN;
    if(dp[n]!=-1)
       return dp[n];
  int a=ans(n-x,x,y,z,dp)+1;
  int b=ans(n-y,x,y,z,dp)+1;
  int c=ans(n-z,x,y,z,dp)+1;
return dp[n]=(max(max(a,b),c));

}
int maximizeTheCuts(int n, int x, int y, int z)
{
int dp[n+1];
memset(dp,-1,sizeof(dp));
int a= ans(n,x,y,z,dp);
if(a<0)return 0;
return a;
}

********************/
