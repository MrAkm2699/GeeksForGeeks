/******************
Given two strings S and T of length n and m respectively. find count of distinct occurrences of T in S as a sub-sequence. 

Example 1:
Input:
S = "banana" , T = "ban"
Output: 3
Explanation: There are 3 sub-sequences:
[ban], [ba n], [b an].

Example 2:
Input:
S = "geeksforgeeks" , T = "ge"
Output: 6
Explanation: There are 6 sub-sequences:
[ge], [ ge], [g e], [g e] [g e] and [ g e].
*******************/

/*****************CODE************/
int subsequenceCount(string S, string T)
    {
      //Your code here
      int m=S.size();
      int n=T.size();
      int dp[m+1][n+1]={};
    //   dp[0][0]=1;
      for(int i=0;i<=m;i++)
      {
          dp[i][0]=1;
      }
      
      for(int i=1;i<=m;i++)
      {
          for(int j=1;j<=n;j++)
          {
              if(S[i-1]==T[j-1])
              {
                  dp[i][j]= (dp[i-1][j-1] + dp[i-1][j]) % (1000000007);
              }
              else
              {
                  dp[i][j]=dp[i-1][j];
              }
          }
      }
      return dp[m][n];
    }
