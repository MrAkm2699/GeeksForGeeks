/************
You are given N pairs of numbers. In every pair, the first number is always smaller than the second number. A pair (c, d) can follow another pair (a, b) if b < c. Chain of 
pairs can be formed in this fashion. You have to find the longest chain which can be formed from the given set of pairs. 

Example 1:
Input:
N = 5
P[] = {5  24 , 39 60 , 15 28 , 27 40 , 50 90}
Output: 3
Explanation: The given pairs are { {5, 24}, {39, 60},
{15, 28}, {27, 40}, {50, 90} },the longest chain that
can be formed is of length 3, and the chain is
{{5, 24}, {27, 40}, {50, 90}}
***********/

/**************CODE***********/
bool check(val v1,val v2)
{
    return v1.second < v2.second ;
}
int maxChainLen(struct val p[],int n)
{

    sort(p,p+n,check);
    int i=0,j=1;
    int ans=1;
    
    while(j<n)
    {
        if(p[i].second < p[j].first)
            {
                ans++;
                i=j;
            }
            j++;
    }
    return ans;
}
