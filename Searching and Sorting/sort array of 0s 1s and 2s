/*************************
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, 
and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

Example 1:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

Example 2:
Input: nums = [2,0,1]
Output: [0,1,2]
*************************/

/******************CODE*****************/
 void sortColors(vector<int>& nums) {
        int l=0,r=nums.size()-1;
        for(int i=0;i<=r;i++)
        {
            if(nums[i]==0)
                swap(nums[i],nums[l++]);
            else if(nums[i]==2)
                swap(nums[i--],nums[r--]);
        }
        /*****************CODE-2********
        int l=0,r=nums.size()-1;
        
        for(int i=0;i<nums.size();i++)
        {
            while(nums[i]==2 and i<r)
                swap(nums[i],nums[r--]);
            
            while(nums[i]==0 and i>l)
                swap(nums[l++],nums[i]);
            
        }
        ****************************/
        
        /***********************code-3******************
        int zero=0,one=0,two=0;
        int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==0)
                zero++;
            else if(nums[i]==1)
                one++;
            else
                two++;
        }
        
        for(int i=0;i<n;i++)
        {
            if(zero!=0)
            {
                nums[i]=0;
                zero--;
            }
            else if(one!=0)
            {
                nums[i]=1;
                one--;
            }else{
                nums[i]=2;
                two--;
            }
        }
        *******************************/
    }
