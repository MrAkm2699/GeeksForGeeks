****************COUNT SORT************GFG
void countSort(char arr[])
{
    // The output character array that will have sorted arr
    char output[strlen(arr)];

    // Create a count array to store count of inidividul
    // characters and initialize count array as 0
    int count[RANGE + 1], i;
    memset(count, 0, sizeof(count));

    // Store count of each character
    for(i = 0; arr[i]; ++i)
        ++count[arr[i]];

    // Change count[i] so that count[i] now contains actual
    // position of this character in output array
    for (i = 1; i <= RANGE; ++i)
        count[i] += count[i-1];

    // Build the output character array                             //arr ki value ko count me dhunda phir usko OP array k index me rakh diya-->1 minus kar diya occurence se 
    for (i = 0; arr[i]; ++i)
    {
        output[count[arr[i]]-1] = arr[i];
        --count[arr[i]];
    }

    // Copy the output array to arr, so that arr now
    // contains sorted characters
    for (i = 0; arr[i]; ++i)
        arr[i] = output[i];
}

*************************if array includes neagtive elements also


void countSort(vector <int>& arr)
{
    int max = *max_element(arr.begin(), arr.end());
    int min = *min_element(arr.begin(), arr.end());
    int range = max - min + 1;
    
    vector<int> count(range), output(arr.size());
    for(int i = 0; i < arr.size(); i++)
        count[arr[i]-min]++;
        
    for(int i = 1; i < count.size(); i++)
           count[i] += count[i-1];
  
    for(int i = arr.size()-1; i >= 0; i--)
    { 
         output[ count[arr[i]-min] -1 ] = arr[i]; 
              count[arr[i]-min]--; 
    }
    
    for(int i=0; i < arr.size(); i++)
            arr[i] = output[i];
}
