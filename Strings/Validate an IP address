Write a program to Validate an IPv4 Address. According to Wikipedia, IPv4 addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots, e.g., 172.16.254.1 . The generalized form of an IPv4 address is (0-255).(0-255).(0-255).(0-255). Here we are considering numbers only from 0 to 255 and any additional leading zeroes will be considered invalid.

Your task is  to complete the function isValid which returns 1 if the ip address is valid else returns 0. The function takes a string s as its only argument .

Example 1:

Input:
ip = 222.111.111.111
Output: 1
Example 2:

Input:
ip = 5555..555
Output: 0
Explanation: 5555..555 is not a valid
ip address, as the middle two portions
are missing.

*******************CODE********GFG***********

   int isValid(string s) {
            int dotCount = 0;
    for(int i = 0; i < s.size(); i++)
    {
        if(s[i] == '.')
        {
            dotCount++;
        }
    }
    
    if(dotCount != 3)
    {
        return false;
    }
    
    stringstream ss(s);
    string temp;
    
    while(getline(ss, temp, '.'))
    {
        if(temp.size() > 3 || temp.size() == 0)
        {
            return false;
        }
        
        if(temp.size() > 1 and temp[0] == '0')
        {
            return false;
        }
        
        int num = 0;
        for(int i = 0; i < temp.size(); i++)
        {
            if(temp[i] >= '0' and temp[i] <= '9')
            {
                num = num * 10 + (temp[i] - '0');
            }
            else
            {
                return false;
            }
        }
        
        if(temp.size() > 1 and num == 0)
        {
            return false;
        }
        
        if(num >= 0 and num <= 255)
        {
            continue;
        }
        else
        {
            return false;
        }
    }
    
    return true;
    }
