Given two strings s1 and s2. The task is to check if s2 is a rotated version of the string s1. The characters in the strings are in lowercase.
Example 1:
Input:
geeksforgeeks
forgeeksgeeks
Output: 
1
Explanation: s1 is geeksforgeeks, s2 is
forgeeksgeeks. Clearly, s2 is a rotated
version of s1 as s2 can be obtained by
left-rotating s1 by 5 units.


******************CODE*************
 bool areRotations(string s1,string s2)
    {
        // Your code here
        
        int n=s1.length();
        int m=s2.length();
        if(n!=m)
            return false;
        s1+=s1;
        //MANY WAYS
         return (s1.find(s2)!=string::npos);                //THING TO REMEMBER
         
         /*
         
          if(s1.find(s2)!=-1)
        return 1;
        return 0;
        
         */
         
         /*
         
         standard naive approach
         
         */
    }
