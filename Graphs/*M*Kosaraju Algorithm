/*********************
SCC are component in which node visits itself again and again or we can say forms a loop THEN that is considered as 1 component  
**********************/

/******************CODE*************/
 void DFS(int i,vector<bool>&vis,stack<int>&s,vector<int> adj[])
    {
        vis[i]=true;
        for(int x : adj[i])
        {
            if(!vis[x])
                DFS(x,vis,s,adj);
        }
        s.push(i);
    }
    
    
    void RDFS(int curr,vector<bool>&vis,vector<int> rev[])
    {
        vis[curr]=true;
        for(int x : rev[curr])
        {
            if(!vis[x])
                RDFS(x,vis,rev);
        }
    }
    
    
    int kosaraju(int V, vector<int> adj[])
    {
        //code here
        stack<int>s;
        vector<bool>vis(V,false);
        vector<int>rev[V];
        
                                              //FIRST DFS FOR STORING IN STACK
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                    DFS(i,vis,s,adj);
            }
        }
        
                                               //REVERSE GRAPH OR TRANSPOSE GRAPH
        for(int i=0;i<V;i++)
        {
            for(int j : adj[i])
            {
                rev[j].push_back(i);
            }
        }
        
                                               //MAKING VIS ARRAY FALSE AGAIN FOR SECOND DFS
        for(int i=0;i<V;i++)
            vis[i]=false;
            
                                             //REVERSE DFS FOR STRONGLY CONNECTED COMPONENTS
        int ans=0;
        while(!s.empty())
        {
            int curr=s.top();
            s.pop();
            
            if(!vis[curr])
                {
                    RDFS(curr,vis,rev);
                    ans++;
                }
        }
        
        return ans;
    }
