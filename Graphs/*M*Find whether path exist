/*****************
The description of cells is as follows:

A value of cell 1 means Source.
A value of cell 2 means Destination.
A value of cell 3 means Blank cell.
A value of cell 0 means Wall.
Note: There are only a single source and a single destination.
 

Example 1:
Input: grid = {{3,0,3,0,0},{3,0,0,0,3}
,{3,3,3,3,3},{0,2,3,0,0},{3,0,0,1,3}}
Output: 0
Explanation: The grid is-
3 0 3 0 0 
3 0 0 0 3 
3 3 3 3 3 
0 2 3 0 0 
3 0 0 1 3 
There is no path to reach at (3,1) i,e at 
destination from (4,3) i,e source.

Example 2:
Input: grid = {{1,3},{3,2}}
Output: 1
Explanation: The grid is-
1 3
3 2
There is a path from (0,0) i,e source to (1,1) 
i,e destination.
****************/

/***************CODE**************/
bool flag=0;
    void DFS(vector<vector<int>>& grid, int x, int y,int r, int c)
    {
        if(x<0 or y<0 or x>=r or y>=c or grid[x][y]==0 or flag==1)
            return;
        if(grid[x][y]==2)
        {
            flag=1;
            return;
        }
        grid[x][y]=0;
        DFS(grid,x-1,y,r,c);
        DFS(grid,x+1,y,r,c);
        DFS(grid,x,y-1,r,c);
        DFS(grid,x,y+1,r,c);
    }
    
    bool is_Possible(vector<vector<int>>& grid) 
    {
        //code here
        
        int r=grid.size();
        int c=grid[0].size();
        int x=0,y=0;
        
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(grid[i][j]==1)
                {
                    x=i;
                    y=j;
                    break;
                }
            }
        }
        DFS(grid,x,y,r,c);
        return flag;
    }
