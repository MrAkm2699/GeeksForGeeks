/*********************
Given a binary tree, the task is to find the maximum path sum. The path may start and end at any node in the tree.

Example 1:

Input:
     10
    /  \
   2   -25
  / \  /  \
 20 1  3  4
Output: 32
Explanation: Path in the given tree goes like 10 , 2 , 20 which gives the max sum as 32.

Example 2: 
Input:
     10
   /    \
  2      5
          \
          -2
Output: 17
Explanation: Path in the given tree goeslike 2 , 10 , 5 which gives the max sum as 17.
******************/

/****************CODE***************/
int solve(Node*root, int &sum)
    {
        if(root==NULL)
            return 0;
        int l=solve(root->left,sum);
        int r=solve(root->right,sum);
        
        
        int temp =max(l + r + root->data, root->data); 
        int temp2=max( max(l,r) + root->data ,temp);
        sum=max(sum,temp2);
        
        return max( max(l,r)+root->data, root->data);
    }
    int findMaxSum(Node* root)
    {
        // Your code goes here
        int sum=INT_MIN;
        solve(root,sum);
        return sum;
    }
