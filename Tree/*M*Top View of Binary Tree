/***************
Given below is a binary tree. The task is to print the top view of binary tree. Top view of a binary tree is the set of nodes visible when the tree is viewed from the top. For 
the given below tree
       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7
Note: Return nodes from leftmost node to rightmost node.

Example 1:
Input:
      1
   /    \
  2      3
Output: 2 1 3
Example 2:

Input:
       10
    /      \
  20        30
 /   \    /    \
40   60  90    100
Output: 40 20 10 30 100
****************/

/****************CODE**********/
vector<int> topView(Node *root)
    {
         map<int,int>m;
        vector<int>ans;
        int hd;                           //IMP
        queue<pair<Node*,int>>q;          //IMP
        q.push({root,0});
        
        while(!q.empty())
        {
            Node*temp = q.front().first;
            hd = q.front().second;
            int data=temp->data;
            q.pop();
            
            if(m.find(hd)==m.end())                //if we remove this line then BOTTOM VIEW
                m[hd]=data;
                
            if(temp->left)
                {
                    q.push({temp->left,hd-1});
                }
            if(temp->right)
                {
                    q.push({temp->right,hd+1});
                }
        }
        
        for(auto x : m)
        {
            ans.push_back(x.second);
        }
        return ans;
    }
