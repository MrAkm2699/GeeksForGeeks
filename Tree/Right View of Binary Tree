/***************
Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Right view of following tree is 1 3 7 8.

          1
       /     \
     2        3
   /   \      /    \
  4     5   6    7
    \
     8

Example 1:

Input:
       1
    /    \
   3      2
Output: 1 2
/****************************CODE********************/
 vector<int> rightView(Node *root)
    {
        vector<int>v;
       queue <Node*> q;
    if(root)
    {
            q.push(root);
     while (q.size()) {
     int k = q.size();
         Node * p;
    while (k--) 
    {
        p = q.front();
        q.pop();

        if (p-> left)
            q.push(p-> left);
        if (p-> right)
            q.push(p-> right);
        
    }
    v.push_back(p->data);
  }
       }
       
  return v;
    }
    
    
    /**********************************CODE-2***************
    
    vector<int> leftView(Node *root)
{
   // Your code here
   if(root==NULL)
    return {};
   vector<int>ans;
    queue<Node*>q;
    q.push(root);
    int f=0;
    Node*temp;
   
   while(!q.empty())
   {
       int size=q.size();
       
       while(size--)
       {
           temp=q.front();
           q.pop();
           if(f==0)
            {
                f++;
                ans.push_back(temp->data);
            }
           if(temp->right)
                q.push(temp->right);
            if(temp->left)
                q.push(temp->left);
       }
       f=0;
   }
    return ans;
}
    
    ***************************************************/
