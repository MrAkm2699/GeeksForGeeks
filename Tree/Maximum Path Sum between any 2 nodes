/************CODE**************/
int solve(Node*root,int &res)
{
    if(!root)                                  //base condition
        return 0;
    int l=solve(root->left,res);              //hypothesis
    int r=solve(root->right,res);
    
    int sum=l+r+root->data;                 //root not in answer
    //int temp=max(max(l,r)+root->data,root->data);
    //int ans=max(temp,sum)
    res=max(res,sum);
    
    return max( max(l,r) + root->data, root->data);      //root in answer ALSO when both sides of root are negative return only root->data
}
class Solution {
public:
    int maxPathSum(Node* root)
    {
        int res=INT_MIN;
        solve(root,res);
        return res;
    }
