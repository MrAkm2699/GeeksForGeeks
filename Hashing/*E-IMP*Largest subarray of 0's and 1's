/*************
Given an array of 0s and 1s. Find the length of the largest subarray with equal number of 0s and 1s.

Example 1:
Input:
N = 4
A[] = {0,1,0,1}
Output: 4
Explanation: The array from index [0...3] contains equal number of 0's and 1's. Thus maximum length of subarray having equal number of 0's and 1's is 4.

Example 2:
Input:
N = 5
A[] = {0,0,1,0,0}
Output: 2
****************/

/***************CODE***************/
int maxLen(int arr[], int N)
    {
        // Your code here
        int ans=0;
        int sum=0;
        unordered_map<int,int>m;
        
        for(int i=0;i<N;i++)
        {
            if(arr[i]==0)
                arr[i]=-1;
        }
        
        for(int i=0;i<N;i++)
        {
            sum+=arr[i];
            if(sum==0)
            {
                ans=i+1;
            }
            if(m.find(sum)==m.end())
            {
                m[sum]=i;
            }
            else{
                ans=max(ans,i-m[sum]);
            }
        }
        return ans;
    }
