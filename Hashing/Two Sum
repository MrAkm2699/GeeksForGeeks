/**************************
Given an array of positive integers and an integer. Determine whether or not there exist two elements in A whose sum is exactly equal to that integer.
Example 1:
Input:
N = 6, X = 16
A[] = {1,4,45,6,10,8}
Output: Yes
Explanation: 10 and 6 are numbers
making a pair whose sum is equal to 16.
*/
/*****************CODE**************/
bool keypair(vector<int> A, int N, int X)
    {
        // Your code goes here
        unordered_map<int,int>um;
        for(int i=0;i<N;i++)
        {
            um[A[i]]++;
        }
        
        for(int i=0;i<N;i++)
        {
            int temp=X-A[i];
            if(um.find(X-A[i])!=um.end())
            {
                if((X-A[i])!= X/2 )                    //X/2 to check for repeated elements
                    return true;
                if(um[X-A[i]]>1 && (X-A[i])==X/2 )
                    return true;
            }
                
        }
        return false;       
    }
    /*************Normal array imple**********CODE-2********
    bool keypair(vector<int> A, int N, int X)
{
        sort(A.begin(), A.end());
        int i=0, j=N-1, f=0;
        while(i<j) 
        {
            if(a[i]+a[j]> X)
                j--;
            else if(A[i]+A[j] < X)
                i++;
            else
              return true;
        }
        return false;

}
    */
