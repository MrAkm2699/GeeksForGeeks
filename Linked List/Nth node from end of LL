/************
Given a linked list consisting of L nodes and given a number N. The task is to find the Nth node from the end of the linked list.

Example 1:
Input:
N = 2
LinkedList: 1->2->3->4->5->6->7->8->9
Output: 8
Explanation: In the first example, there are 9 nodes in linked list and we need to find 2nd node from end. 2nd node from end os 8.  

Example 2:
Input:
N = 5
LinkedList: 10->5->100->5
Output: -1
Explanation: In the second example, there are 4 nodes in the linked list and we need to find 5th from the end. Since 'n' is more than the number of nodes in the linked list, 
the output is -1.
*************/


/*************CODE*******Efficient************/

int getNthFromLast(Node *head, int n)
{
    Node*front=head;
    Node*back=head;
    if(head==NULL)
        return -1;
    while(n--)
    {
        if(front==NULL)
            return -1;
        front=front->next;
    }
    
    while(front!=NULL)
    {
        back=back->next;
        front=front->next;
    }
    return back->data;
    

/****************CODE*************
{
       int ans=0;
       Node*temp=head;
       while(temp!=NULL)
       {
           ans++;
           temp=temp->next;
       }
       if(n>ans)
        return -1;
        
       ans=ans-n;
       temp=head;
       while(ans--)
       {
           temp=temp->next;
       }
       ans=temp->data;
       return ans;
}
*********************************/
